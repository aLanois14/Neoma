@model Neoma.Models.CandidatViewModel.ViewCandidatViewModel
@using Neoma.Extensions

@{
    ViewData["Title"] = "Candidats";
}

@section Scripts{
    <script src="~/js/CandidatGlobal.js"></script>
    <script type="text/javascript" src="~/js/filtersearchcandidat.js"></script>
    <script type="text/javascript" src="~/js/pagination.js"></script>
    <script>
        $(function () {
            $(".Role").prop('selectedIndex', 0);

            $("body").on("change", ".Role", function () {
                accessibilityFilterRole($(this)[0].selectedIndex);

                var chaineRecherche = $("#searchText").val();
                var specialite = $(this).parent().parent().find(".specialite");
                var role = $(this).val();
                var Role = {};
                Role.Id = $(this).val();
                var FilterViewModel = {};
                FilterViewModel.Role = Role;
                FilterViewModel.TexteRecherche = chaineRecherche ? chaineRecherche.toLowerCase() : chaineRecherche;
                var items = JSON.stringify(FilterViewModel);
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("UpdateSpecialite", "Candidat")',
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    data: { "role": role},
                    success: function (data) {
                        specialite.find('option').remove();
                        $.each(data, function (key, value) {
                            specialite.append($("<option></option>")
                                .attr("value", value.id).text(value.name));
                        });
                    }
                });
                UpdateCall(items);
            });

            $('.make-select2').on('select2:unselect', function () {
                updateCandidat()
            });

            $('.make-select2').on('select2:select', function () {
                updateCandidat()
            });

            function updateCandidat() {
                var specialite = $(".specialite").select2('data');
                var Role = {};
                Role.Id = $(".Role").val();
                var FilterViewModel = {};
                var ListeSpecialite = [];
                $.each(specialite, function (n) {
                    var Specialite = {};
                    Specialite.Id = specialite[n].id;
                    Specialite.Name = specialite[n].text;
                    ListeSpecialite[n] = Specialite;
                });
                var chaineRecherche = $("#searchText").val();
                chaineRecherche = chaineRecherche ? chaineRecherche.toLowerCase() : chaineRecherche;
                FilterViewModel.Specialite = ListeSpecialite;
                FilterViewModel.Role = Role;
                FilterViewModel.TexteRecherche = chaineRecherche;
                var items = JSON.stringify(FilterViewModel);
                UpdateCall(items);
            }

            function UpdateCall(items) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("TableCandidatSpecialite", "Candidat")',
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    data: items,
                    success: function (data) {
                        $("#tableCandidat").html(data);
                        var len = $("#tableCandidat .item").length;
                        if (len > 1) {
                            $(".result").html('<b class="color-violet">' + len + '</b> co-surfeurs correspondent à votre recherche');
                        }
                        else {
                            $(".result").html('<b class="color-violet">' + len + '</b> co-surfeur correspond à votre recherche');
                        }
                        HighlightSearch();
                        $("#maxRows").change();
                    }
                });
            }

            $('#searchText').keyup(delay(function () {
                updateCandidat()
            }, 1000));

            function delay(callback, ms) {
                var timer = 0;
                return function () {
                    var context = this, args = arguments;
                    clearTimeout(timer);
                    time = setTimeout(function () {
                        callback.apply(context, args);
                    }, ms || 0);
                };
            }

            getPagination('.items-listing');
        })
    </script>
}

<div class="page-top">
    <nav class="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="#">Accueil</a>
            </li>
            <li class="breadcrumb-item">
                <a>Co-surfeurs</a>
            </li>
            <li class="breadcrumb-item active">
                Liste co-surfeurs
            </li>
        </ol>
    </nav>
</div>

<div class="row justify-content-md-center">
    <div class="col-md-12">
        <section class="neobox">
            <div class="neobox-header">
                <div class="neobox-header-container">
                    <div class="neo-select-control">
                        <label>Rôle</label>
                        <select asp-items="Model.Role.ToSelectListItem(0)" class="Role"></select>
                    </div>
                    <div class="neo-select2-control">
                        <select class="make-select2 specialite" multiple="multiple" asp-items="Model.Specialite.ToSelectListItem(0)"></select>
                    </div>
                    <div class="neo-select-control">
                        <label>Ligne à afficher</label>
                        <select id="maxRows">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="50">50</option>
                            <option value="0" selected>Tous</option>
                        </select>
                    </div>
                </div>

                <div class="neobox-header-container">
                    <div class="neo-search-control">
                        <i class="icon-search"></i>
                        <input id="searchText" type="text" class="form-control" placeholder="Rechercher" />
                    </div>
                    <div class="btn-group ml-2">
                        <span class="btn btn-outline btn-grid">
                            <i class="fa fa-grip-horizontal"></i>
                        </span>
                        <span class="btn btn-outline btn-list active">
                            <i class="fa fa-list"></i>
                        </span>
                    </div>
                </div>

            </div>
            <div class="neobox-content">
                <div class="items-listing-number-result">
                    <p class="color-grey result"><b class="color-violet">152</b> co-surfeurs correspondent à votre recherche</p>
                </div>
            </div>
            <div class="neobox-content p-0">
                <ul class="items-listing list" id="tableCandidat">
                    @await Component.InvokeAsync("TableCandidat", null)
                </ul>
            </div>

        </section>

        <div class="neo-pagination mt-5 mb-5">
            <div class="neo-pagination-left">
                <a class="neo-pagination-link">
                    <i class="icon-start"></i>
                </a>
            </div>

            <div class="neo-pagination-center">
            </div>

            <div class="neo-pagination-right">
                <a class="neo-pagination-link">
                    <i class="icon-end"></i>
                </a>
            </div>
        </div>
    </div>
</div>

